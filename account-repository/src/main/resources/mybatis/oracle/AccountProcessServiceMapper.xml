<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="accProServiceMapper">

	<sql id="accountTodoTaskSql">
		with authority as
		 (SELECT a.userId,
				 a.roleId,
				 A.reporttemplateid,
				 a.operationtype,
				 xmlagg(xmlparse(content A.orgs || '+' wellformed) order by 1)
				 .getclobval() as orgs
			FROM (select t1.id as userId,
						 t3.id as roleId,
						 inst.id as orgId,
						 case
						   when t5.institutelevel = 0 then
							'[' || to_clob(inst.id) || ']'
						   when t5.institutelevel = 1 then
							(select xmlagg(xmlparse(content '[' || ss1.ID || ']' wellformed) order by ss1.parentinstitution_id)
									.getclobval()
							   from institution ss1
							  where ss1.parentinstitution_id = inst.id)
						   when t5.institutelevel = 2 then
							(select xmlagg(xmlparse(content '[' || ss2.ID || ']' wellformed) order by 1)
									.getclobval()
							   from institution ss2
							  start with ss2.parentinstitution_id = inst.id
							 connect by prior ss2.id = ss2.parentinstitution_id)
						 end as orgs,
						 t5.reporttemplateid,
						 t5.operationtype
					from sysuser t1
				   inner join institution inst
					  on t1.org_id = inst.id
				   inner join sysuser_role t2
					  on t1.id = t2.sysuser_id
				   inner join (select r.id from role r where r.subsystem_id = #{reportSubSystem_id,jdbcType=INTEGER}) t3
					  on t2.roles_id = t3.id
				   inner join role_reportpermission t4
					  on t3.id = t4.role_id
				   inner join reportpermission t5
					  on t4.reportpermission_id = t5.id
				   where t1.id = #{sysuser_id,jdbcType=INTEGER}) A
		   GROUP BY a.userId, a.roleId, A.reporttemplateid, A.operationtype),
		reports as
		 (SELECT LR.id,
				 IT.ID AS INSTITUTIONID,
				 IT.INSTITUTIONNAME,
				 LRT.ID as reportTemplateId,
				 LRT.TEMPLATENAME,
				 LRT.TEMPLATECODE,
				 TO_CHAR(TO_DATE(LR.TERM, 'yyyy-MM-dd'), 'yyyy-MM-dd') AS term,
				 RF.REPFREQNAME as freq,
				 LR.ACCOUNTSTATE,
				 LR.VALIDATESTATUS
			FROM ACCOUNT LR
		   INNER JOIN INSTITUTION IT
			  ON IT.ID = LR.INSTITUTION_ID
		   INNER JOIN reporttemplate LRT
			  ON LRT.ID = LR.ACCOUNTTEMPLATE_ID
		   INNER JOIN BUSSYSTEM BS
			  ON BS.ID = LRT.BUSSYSTEM_ID
		   INNER JOIN S_REPFREQ RF
			  ON LRT.REPFREQ_ID = RF.ID
		   WHERE 1 = 1
		<if test=" templateCode != null and templateCode != '' ">
			and lrt.templateCode like concat(concat('%',#{templateCode,jdbcType=VARCHAR}),'%')
		</if>
		<if test=" templateName != null and templateName != '' ">
			and lrt.templateName like concat(concat('%',#{templateName,jdbcType=VARCHAR}),'%')
		</if>
		<if test=" freq != null and freq != '' ">
			and lr.freq= #{freq,jdbcType=VARCHAR}
		</if>
		<if test=" term != null and term != '' ">
			and to_char(to_date(lr.term,'yyyy-MM-dd'),'yyyy-MM-dd')=#{term,jdbcType=VARCHAR}
		</if>

		<if test=" institutionName != null and institutionName != '' ">
			and it.institutionName like concat(concat('%',#{institutionName,jdbcType=VARCHAR}),'%')
		</if>

		<if test=" orgIds != null and orgIds != '' ">
			and it.id in (${orgIds} )
		</if>

		<if test=" @com.fitech.enums.ValidateStatusEnum@transferValue(validatestatus) != null and @com.fitech.enums.ValidateStatusEnum@transferValue(validatestatus) != '' ">
			and lr.validatestatus = #{validatestatus}
		</if>

		<if test=" @com.fitech.enums.account.AccountStateEnum@transferValue(accountState) != null and
					@com.fitech.enums.account.AccountStateEnum@transferValue(accountState) != '' ">
			and lr.accountState  =  #{accountState}
		</if>
		<if test=" reportSubSystem_id != null and reportSubSystem_id != '' ">
			and bs.reportSubSystem_id = #{reportSubSystem_id,jdbcType=INTEGER}
		</if>
		<if test=" institution_id != null and institution_id != '' ">
			and lr.institution_id = #{institution_id,jdbcType=INTEGER}
		</if>
		)
	</sql>

	<select id="isMultiInstanceTaskExecOver" parameterType="map" resultType="long">
       select LONG_ from ACT_RU_VARIABLE where NAME_='nrOfActiveInstances' and PROC_INST_ID_= #{proInstId}
    </select>
	<select id="getReceiverIdList" parameterType="map" resultType="long">
		select distinct  t3.sysuser_id as userId from account t 
		inner join accountprocess t1 on t.id = t1.account_id
		inner join act_ru_task t2 on t1.procinsetid = t2.proc_inst_id_ 
		inner join sysuser_role t3 on t2.assignee_ = t3.roles_id 
		where 1=1 
		<if test=" freq != null and freq != '' ">
			and t.freq = #{freq}
		</if>
		<if test=" term != null and term != '' ">
			and t.term = #{term}
		</if>
	</select>
	
	<select id="findDoneQuerySqltwo" parameterType="map" resultType="map">
       select ac.id,it.institutionname,to_char(to_date(ac.term,'yyyy-MM-dd'),'yyyy-MM-dd') as term,rt.templatename from account ac 
       INNER JOIN INSTITUTION it on AC.INSTITUTION_ID=it.id INNER JOIN ReportTemplate rt ON ac.ACCOUNTTEMPLATE_ID=rt.id 
       where ac.accountstate=2
		<if test=" term != null and term != '' ">
			and to_char(to_date(ac.term,'yyyy-MM-dd'),'yyyy-MM-dd') = #{term}
		</if>
		<if test=" templateName != null and templateName != '' ">
			and rt.templatename like  concat(concat('%',#{templateName}),'%') 
		</if>
		<if test=" institutionname != null and institutionname != '' ">
			and it.institutionname like concat(concat('%',#{institutionname}),'%')  
		</if>
		order by ac.id
    </select>


	<select id="findDoneQuerySql" parameterType="map" resultType="map">
		select ac.id,
		it.institutionname,
		to_char(to_date(ac.term, 'yyyy-MM-dd'), 'yyyy-MM-dd') as term,
		ap.templatename
		from account ac
		INNER JOIN INSTITUTION it
		on AC.INSTITUTION_ID = it.id
		INNER JOIN reporttemplate ap
		ON ac.ACCOUNTTEMPLATE_ID = ap.id
		WHERE exists (select *
		from (SELECT t1.term as s
		FROM ACCOUNT T1
		LEFT JOIN reporttemplate LETE
		ON LETE.ID = T1.ACCOUNTTEMPLATE_ID) a1
		where a1.s = ac.term)
		AND (ac.SUBMITSTATETYPE = 1 OR ac.SUBMITSTATETYPE = 0)
		and exists (select id, keys
		from (select i.id, 0 as keys
		from institution i
		left join sysuser u
		on i.id = u.org_id
		where u.id = #{userId}
		union all
		select i.id, 1 as keys
		from institution i
		left join sysuser u
		on i.id = u.org_id
		or i.parentinstitution_id = u.org_id
		where u.id = #{userId}
		union all
		select i.id, 2 as keys
		from Institution i
		start with i.id = (select u.org_id
		from sysuser u
		where u.id = #{userId})
		connect by prior id = i.parentinstitution_id) a
		where a.keys =
		(select max(t1.institutelevel) as lev
		from reportpermission t1
		right join role_reportpermission t2
		on t1.id = t2.reportpermission_id
		where exists (select 1
		from sysuser_role s
		where s.roles_id = t2.role_id
		and s.sysuser_id = #{userId})
		and t1.operationtype = 0
		and t1.reporttemplateid =
		ac.accounttemplate_id)
		and id = ac.institution_id)
		<if test=" term != null and term != '' ">
			and to_char(to_date(ac.term,'yyyy-MM-dd'),'yyyy-MM-dd') = #{term}
		</if>
		<if test=" templateName != null and templateName != '' ">
			and ap.templatename like concat(concat('%',#{templateName}),'%')
		</if>
		<if test=" institutionname != null and institutionname != '' ">
			and it.institutionname like concat(concat('%',#{institutionname}),'%')
		</if>
		order by ac.id
	</select>

	<select id="findDoneQuerySqlCount" parameterType="map" resultType="long">
		select count(*) from (
		select ac.id,
		it.institutionname,
		to_char(to_date(ac.term, 'yyyy-MM-dd'), 'yyyy-MM-dd') as term,
		ap.templatename
		from account ac
		INNER JOIN INSTITUTION it
		on AC.INSTITUTION_ID = it.id
		INNER JOIN reporttemplate ap
		ON ac.ACCOUNTTEMPLATE_ID = ap.id
		WHERE exists (select *
		from (SELECT t1.term as s
		FROM ACCOUNT T1
		LEFT JOIN reporttemplate LETE
		ON LETE.ID = T1.ACCOUNTTEMPLATE_ID) a1
		where a1.s = ac.term)
		AND (ac.SUBMITSTATETYPE = 1 OR ac.SUBMITSTATETYPE = 0)
		and exists (select id, keys
		from (select i.id, 0 as keys
		from institution i
		left join sysuser u
		on i.id = u.org_id
		where u.id = #{userId}
		union all
		select i.id, 1 as keys
		from institution i
		left join sysuser u
		on i.id = u.org_id
		or i.parentinstitution_id = u.org_id
		where u.id = #{userId}
		union all
		select i.id, 2 as keys
		from Institution i
		start with i.id = (select u.org_id
		from sysuser u
		where u.id = #{userId})
		connect by prior id = i.parentinstitution_id) a
		where a.keys =
		(select max(t1.institutelevel) as lev
		from reportpermission t1
		right join role_reportpermission t2
		on t1.id = t2.reportpermission_id
		where exists (select 1
		from sysuser_role s
		where s.roles_id = t2.role_id
		and s.sysuser_id = #{userId})
		and t1.operationtype = 0
		and t1.reporttemplateid =
		ac.accounttemplate_id)
		and id = ac.institution_id)
		<if test=" term != null and term != '' ">
			and to_char(to_date(ac.term,'yyyy-MM-dd'),'yyyy-MM-dd') = #{term}
		</if>
		<if test=" templateName != null and templateName != '' ">
			and ap.templatename like concat(concat('%',#{templateName}),'%')
		</if>
		<if test=" institutionname != null and institutionname != '' ">
			and it.institutionname like concat(concat('%',#{institutionname}),'%')
		</if>
		order by ac.id
		)a
	</select>


	<select id="selectReasonsByReportId" resultType="reasonDto">
		select *
		from (select rs.*,
		su.username,
		case
		when rs.reasonDescType = '2' then
		1
		else
		row_number()
		over(partition by rs.reasonDescType order by rs.time desc)
		end as rn
		from REPORTREASON rs
		left join sysuser su
		on rs.userid = su.id
		inner join REPORTREASON_REPORT RR
		ON rs.id = RR.REPORTREASON_ID
		and rs.status = 1
		inner join report r
		on RR.REPORTS_ID = r.id
		and RR.REPORTS_ID = #{lid})
		where rn = 1
	</select> 
	
	
	<resultMap type="map" id="accountMap">     
		<id property="LID" column="lid" />
       <collection property="reportReasons" ofType="reasonDto"  column="lid" javaType="ArrayList"  select="selectReasonsByReportId" />  
    </resultMap>
	
	<select id="findTodoTaskBySql" parameterType="map" resultMap="accountMap">
        <include refid="accountTodoTaskSql"/>
		select distinct a.* from   (select Translate(t8.id_ USING CHAR_CS) as id,t10.institutionId,t10.institutionName,t10.templateCode as
        templateId,t10.templateName,to_char(to_date(t10.term,'yyyy-MM-dd'),'yyyy-MM-dd') as term,Translate(t8.name_
        USING CHAR_CS) as processName,t10.validateStatus,Translate(t8.id_ USING CHAR_CS) as taskId,t9.ACCOUNT_ID,
        Translate(t8.description_ USING CHAR_CS) as description,
        t10.freq,t9.procInsetId,Translate(t8.category_ USING CHAR_CS) as category,t10.accountState,t9.id pid,t10.id lid,
        t9.refuseCause
		from (select t7.proc_inst_id_,
		t7.assignee_,
		t7.id_,
		t7.name_,
		t7.task_def_key_,
		t7.description_,
		t7.CATEGORY_,
		case
		when t7.category_ = 'bulu' then
		1
		when t7.category_ = 'shenhe' then
		2
		end as operationtype,
        nvl(t6.assignerroles_id,t7.assignee_) as roleId
		from act_ru_task t7 
		LEFT join RoleTask_role t6
	    on to_char(t6.roletask_id) = to_char(t7.assignee_)
	    where instr(t7.assignee_,'_')  &lt;= 0
		) t8
		inner join accountprocess t9
		on t8.proc_inst_id_ = t9.procinsetid
		inner join reports t10
		on t9.account_id = t10.id
		inner join authority
		on instr(authority.orgs, '[' || t10.INSTITUTIONID || ']') > 0
		and authority.reporttemplateid = t10.reporttemplateId
		and to_char(authority.roleId) = to_char(t8.roleId)
		and authority.operationtype = t8.operationtype
		where 1=1
		<if test=" category_ != null and category_ != '' ">
			and t8.category_ = #{category_,jdbcType=VARCHAR}
		</if>
		<if test=" proc_inst_id_ != null and proc_inst_id_ != '' ">
			and t8.proc_inst_id_ = #{proc_inst_id_,jdbcType=INTEGER}
		</if>
		<if test=" sysuser_id != null and sysuser_id != '' ">
			and authority.userId = #{sysuser_id,jdbcType=INTEGER}
		</if>
		) a order by a.term desc,a.templateid,a.institutionid
     </select>
	<select id="findTodoTaskBySqlCount" parameterType="map" resultType="long">
		<include refid="accountTodoTaskSql"/>
		select count(*) from (
		select distinct t8.id_
		from (select t7.proc_inst_id_,
		t7.assignee_,
		t7.id_,
		t7.name_,
		t7.task_def_key_,
		t7.description_,
		t7.CATEGORY_,
		case
		when t7.category_ = 'bulu' then
		1
		when t7.category_ = 'shenhe' then
		2
		end as operationtype,
        nvl(t6.assignerroles_id,t7.assignee_) as roleId
		from act_ru_task t7 
		LEFT join RoleTask_role t6
	    on to_char(t6.roletask_id) = to_char(t7.assignee_)	
	    where instr(t7.assignee_,'_')  &lt;= 0
		) t8
		inner join accountprocess t9
		on t8.proc_inst_id_ = t9.procinsetid
		inner join reports t10
		on t9.account_id = t10.id
		inner join authority
		on instr(authority.orgs, '[' || t10.INSTITUTIONID || ']') > 0
		and authority.reporttemplateid = t10.reporttemplateId
		and to_char(authority.roleId) = to_char(t8.roleId)
		and authority.operationtype = t8.operationtype
		where 1=1
		<if test=" category_ != null and category_ != '' ">
			and t8.category_ = #{category_,jdbcType=VARCHAR}
		</if>
		<if test=" proc_inst_id_ != null and proc_inst_id_ != '' ">
			and t8.proc_inst_id_ = #{proc_inst_id_,jdbcType=INTEGER}
		</if>
		<if test=" sysuser_id != null and sysuser_id != '' ">
			and authority.userId = #{sysuser_id,jdbcType=INTEGER}
		</if>
		)
     </select>
     
     <sql id="queryAuthoritySql">
     with authority as
		 (SELECT a.userId,
				 A.reporttemplateid,
				 xmlagg(xmlparse(content A.orgs || '+' wellformed) order by 1)
				 .getclobval() as orgs
			FROM (select t1.id as userId,
						 inst.id as orgId,
						 case
						   when t5.institutelevel = 0 then
							'[' || to_clob(inst.id) || ']'
						   when t5.institutelevel = 1 then
							(select xmlagg(xmlparse(content '[' || ss1.ID || ']' wellformed) order by ss1.parentinstitution_id)
									.getclobval()
							   from institution ss1
							  where ss1.parentinstitution_id = inst.id)
						   when t5.institutelevel = 2 then
							(select xmlagg(xmlparse(content '[' || ss2.ID || ']' wellformed) order by 1)
									.getclobval()
							   from institution ss2
							  start with ss2.parentinstitution_id = inst.id
							 connect by prior ss2.id = ss2.parentinstitution_id)
						 end as orgs,
						 t5.reporttemplateid
					from sysuser t1
				   inner join institution inst
					  on t1.org_id = inst.id
				   inner join sysuser_role t2
					  on t1.id = t2.sysuser_id
				   inner join (select r.id from role r where r.subsystem_id = #{reportSubSystem_id,jdbcType=INTEGER}) t3
					  on t2.roles_id = t3.id
				   inner join role_reportpermission t4
					  on t3.id = t4.role_id
				   inner join reportpermission t5
					  on t4.reportpermission_id = t5.id
				   where t1.id = #{sysuser_id,jdbcType=INTEGER}
				       and t5.operationtype = #{operationType}
				   ) A
		   GROUP BY a.userId,A.reporttemplateid)
     </sql>
     
     
     <select id="findDoneTaskBySql" parameterType="map" resultType="map">
         <include refid="queryAuthoritySql"/>
		select o.id,it.institutionId,it.institutionName,lrt.templateCode,lrt.templateName,
		to_char(to_date(lr.term,'yyyy-MM-dd'),'yyyy-MM-dd') as term,Translate(task.name_ USING CHAR_CS) AS NAME,
		lr.validateStatus,Translate(task.id_ USING CHAR_CS) as taskId,task.proc_inst_id_  as processId,task.end_time_,lr.freq ,task.userName as submitter
	    from AccountProcess o
        inner join (select t.*
               from (select t.id_,
                            t.proc_inst_id_,
                            t.name_,
                            t.assignee_,
                            su.username,
                            to_char(t.start_time_, 'yyyy-MM-dd HH24:mi:ss') as start_time_,
                            to_char(t.end_time_, 'yyyy-MM-dd HH24:mi:ss') as end_time_,
                            row_number() over(partition by t.proc_inst_id_ order by t.start_time_ desc) rn
                       from ACT_HI_TASKINST t
                       left join sysuser su
                         on t.assignee_ = to_char(su.id)
                      where t.delete_reason_ = 'completed') t
              where t.rn = 1) task
        on task.proc_inst_id_ = o.procInsetId
        inner join Account lr
        on lr.id = o.ACCOUNT_ID
        inner join Institution it on it.id=lr.institution_id
        inner join reporttemplate lrt on lrt.id=lr.ACCOUNTTEMPLATE_ID
        inner join authority  ON authority.reporttemplateid = lrt.id AND instr(authority.orgs, '['||it.id||']') > 0     
        inner join BusSystem bs on bs.id = lrt.busSystem_id  and bs.reportsubsystem_id=#{reportSubSystem_id}
        where 1=1 and  task.rn=1
        <if test=" templateCode != null and templateCode != '' ">
			and lrt.templateCode like concat(concat('%',#{templateCode}),'%')
		</if> 
        <if test=" templateName != null and templateName != '' ">
			and lrt.templateName like concat(concat('%',#{templateName}),'%') 
		</if>
        <if test=" freq != null and freq != '' ">
			and lr.freq= #{freq}
		</if>
        <if test=" term != null and term != '' ">
			and to_char(to_date(lr.term,'yyyy-MM-dd'),'yyyy-MM-dd')=#{term}
		</if>
		<if test=" institutionName != null and institutionName != '' ">
			and it.institutionName like concat(concat('%',#{institutionName}),'%')  
		</if>
		<if test=" processId != null and processId != '' ">
			and task.proc_inst_id_ = #{processId}
		</if>
		<if test=" institution_id != null and institution_id != '' ">
			and lr.institution_id = #{institution_id}
		</if>
		order by lrt.templateCode,lr.term
     </select>
     <select id="findDoneTaskBySqlCount" parameterType="map" resultType="long">
		  <include refid="queryAuthoritySql"/>
        select   count(1)
		from AccountProcess o
        inner join (select t.*
               from (select t.id_,
                            t.proc_inst_id_,
                            t.name_,
                            t.assignee_,
                            su.username,
                            to_char(t.start_time_, 'yyyy-MM-dd HH24:mi:ss') as start_time_,
                            to_char(t.end_time_, 'yyyy-MM-dd HH24:mi:ss') as end_time_,
                            row_number() over(partition by t.proc_inst_id_ order by t.start_time_ desc) rn
                       from ACT_HI_TASKINST t
                       left join sysuser su
                         on t.assignee_ = to_char(su.id)
                      where t.delete_reason_ = 'completed') t
              where t.rn = 1) task
        on task.proc_inst_id_ = o.procInsetId
        inner join Account lr
        on lr.id = o.ACCOUNT_ID
        inner join Institution it on it.id=lr.institution_id
        inner join reporttemplate lrt on lrt.id=lr.ACCOUNTTEMPLATE_ID
        inner join authority  ON authority.reporttemplateid = lrt.id AND instr(authority.orgs, '['||it.id||']') > 0     
        inner join BusSystem bs on bs.id = lrt.busSystem_id  and bs.reportsubsystem_id=#{reportSubSystem_id}
            where 1=1 
        <if test=" templateCode != null and templateCode != '' ">
			and lrt.templateCode like concat(concat('%',#{templateCode}),'%')
		</if> 
        <if test=" templateName != null and templateName != '' ">
			and lrt.templateName like concat(concat('%',#{templateName}),'%') 
		</if>
        <if test=" freq != null and freq != '' ">
			and lr.freq= #{freq}
		</if>
        <if test=" term != null and term != '' ">
			and to_char(to_date(lr.term,'yyyy-MM-dd'),'yyyy-MM-dd')=#{term}
		</if>
		<if test=" institutionName != null and institutionName != '' ">
			and it.institutionName like concat(concat('%',#{institutionName}),'%')  
		</if>
		<if test=" processId != null and processId != '' ">
			and task.proc_inst_id_ = #{processId}
		</if>
		<if test=" institution_id != null and institution_id != '' ">
			and lr.institution_id = #{institution_id}
		</if>
		
	 </select>
	
	<select id="exculteCall" statementType="CALLABLE" parameterType="java.util.Map">  
       {call PROC_ACCOUNT(#{term,mode=IN,jdbcType=VARCHAR},#{result,mode=OUT,jdbcType=VARCHAR})}  
    </select>

	<select id="findReportIdByTemplateId" parameterType="Long" resultType="Long">
		select a.id
		  from account a
		  left join reporttemplate b on a.accounttemplate_id = b.id
		 where b.id = #{templateId}
	</select>
</mapper>